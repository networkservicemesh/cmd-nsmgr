---
name: Update integration-k8s-kind reposiotry
on:
  push:
    branches:
      - master

jobs:
  update-integration-k8s-kind:
    name: Update integration-k8s-kind
    runs-on: ubuntu-latest
    if: github.repository != 'networkservicemesh/cmd-template'
    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v2
        with:
          path: ${{ github.repository }}
          repository: ${{ github.repository }}
          token: ${{ secrets.NSM_BOT_GITHUB_TOKEN }}
      - name: Create commit message
        working-directory: ${{ github.repository }}
        run: |
          echo "Update application version to latest version from ${{ github.repository }}@master ${{ github.repository }}#${{ github.event.number }}" >> /tmp/commit-message
          echo "" >> /tmp/commit-message
          echo "${{ github.repository }} PR link: https://github.com/${{ github.repository }}/pull/${{ github.event.number }}" >> /tmp/commit-message
          echo "" >> /tmp/commit-message
          echo "${{ github.repository }} commit message:" >> /tmp/commit-message
          git log -1 >> /tmp/commit-message
          echo "Commit Message:"
          cat /tmp/commit-message
      - name: Checkout networkservicemesh/integration-k8s-kind
        uses: actions/checkout@v2
        with:
          path: networkservicemesh/integration-k8s-kind
          repository: networkservicemesh/integration-k8s-kind
          token: ${{ secrets.NSM_BOT_GITHUB_TOKEN }}
      - uses: benjlevesque/short-sha@v1.1
        id: short-sha
        with:
          length: 8
      - name: Find and Replace version
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "${{ github.event.repository.name }}:.*\n"
          replace: "${{ github.event.repository.name }}:${{ steps.short-sha.outputs.sha }}\n"
      - name: Push update to the integration-k8s-kind
        working-directory: networkservicemesh/integration-k8s-kind
        run: |
          echo Starting to update repositotry integration-k8s-kind
          git add -- .
          if ! [ -n "$(git diff --cached --exit-code)" ]; then
            echo Repository already up to date
            exit 0;
          fi
          diff=$(git diff --name-only)
          branchName="${{ github.event.repository.name }}"
          if  [ $(grep "go.mod" <<< "${diff}") && $(grep "" -c <<< "${diff}") == 1 ]; then
            sdkPattern="github.com\/networkservicemesh\/sdk "
            sdkVersion=$(grep --regexp "${sdkPattern}" go.mod)
            branchName="${sdkVersion:${#sdkPattern}}"
          fi;
          git config --global user.email "nsmbot@networkservicmesh.io"
          git config --global user.name "NSMBot"
          git commit -s -F /tmp/commit-message
          git checkout -b update/"${branchName}"
          while [ git push -f origin update/"${branchName}" ]; do
            git fetch origin update/"${branchName}"
            git rebase origin/update/"${branchName}"
          done
